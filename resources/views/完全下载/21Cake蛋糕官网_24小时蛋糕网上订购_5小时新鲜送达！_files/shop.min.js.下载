var version = Date.now().toString();
if(document.getElementById("version") != null && document.getElementById("version").value != ""){
    version = document.getElementById("version").value.toString();
}
(function () {
    var a = {
        name: "localStorage",
        init: function () {
            if (!window.localStorage) return !1;
            this._storage = window.localStorage;
            return this
        },
        setStorage: function (a, b) {
            this._storage.setItem(a, b);
            return !0
        },
        getStorage: function (a, b) {
            var d = this._storage.getItem(a);
            b(d ? d : null)
        },
        removeStorage: function (a) {
            this._storage.removeItem(a);
            return !0
        },
        clearStorage: function () {
            if (this._storage.clear) this._storage.clear();
            else for (i in this._storage) this._storage[i].value && this.remove(i);
            return !0
        }
    },
        c = {
            name: "globalStorage",
            init: function () {
                if (!Browser.firefox || !window.globalStorage) return !1;
                this._storage = globalStorage[location.hostname];
                return this
            },
            setStorage: function (a, b) {
                this._storage.setItem(a, b);
                return !0
            },
            getStorage: function (a, b) {
                var d = this._storage.getItem(a);
                b(d ? d.value : null)
            },
            removeStorage: function (a) {
                this._storage.removeItem(a);
                return !0
            },
            clearStorage: function () {
                if (this._storage.clear) this._storage.clear();
                else for (i in this._storage) this._storage[i].value && this.remove(i);
                return !0
            }
        },
        b = {
            name: "userdata",
            init: function () {
                this.Master = "ie6+";
                if (!Browser.ie) return !1;
                this.file_name = "ECStore_VS";
                if (!this._storage) try {
                    var a = this._storage = document.createElement("input");
                    a.type = "hidden";
                    a.addBehavior("#default#userData");
                    document.body.appendChild(a);
                    a.save(this.file_name)
                } catch (b) {}
                return this
            },
            setStorage: function (a, b) {
                this._storage.setAttribute(a, b);
                this._storage.save(this.file_name);
                return !0
            },
            getStorage: function (a, b) {
                this._storage.load(this.file_name);
                b(this._storage.getAttribute(a))
            },
            removeStorage: function (a) {
                this._storage.removeAttribute(a);
                this._storage.save(this.file_name);
                return !0
            },
            clearStorage: function () {
                this._storage.load(this.file_name);
                var a = new Date;
                a.setMinutes(a.getMinutes() - 1);
                this._storage.expires = a.toUTCString();
                this._storage.save(this.file_name);
                return !0
            }
        },
        d = {
            name: "openDatabase",
            init: function () {
                if (!window.openDatabase) return !1;
                this._storage = window.openDatabase("viewState", "1.0", "ECStore ViewState Storage", 2E4);
                this._createTable();
                return this
            },
            setStorage: function (a, b) {
                this._storage.transaction(function (d) {
                    d.executeSql("SELECT v FROM SessionStorage WHERE k = ?", [a], function (d, c) {
                        c.rows.length ? d.executeSql("UPDATE SessionStorage SET v = ?  WHERE k = ?", [b, a]) : d.executeSql("INSERT INTO SessionStorage (k, v) VALUES (?, ?)", [a, b])
                    })
                });
                return !0
            },
            getStorage: function (a, b) {
                this._storage.transaction(function (d) {
                    v = d.executeSql("SELECT v FROM SessionStorage WHERE k = ?", [a], function (a, d) {
                        if (d.rows.length) return b(d.rows.item(0).v);
                        b(null)
                    })
                })
            },
            removeStorage: function (a) {
                this._storage.transaction(function (b) {
                    b.executeSql("DELETE FROM SessionStorage WHERE k = ?", [a])
                });
                return !0
            },
            clearStorage: function () {
                this._storage.transaction(function (a) {
                    a.executeSql("DROP TABLE SessionStorage", [])
                });
                return !0
            },
            _createTable: function () {
                this._storage.transaction(function (a) {
                    a.executeSql("SELECT COUNT(*) FROM SessionStorage", [], function () {}, function (a) {
                        a.executeSql("CREATE TABLE SessionStorage (k TEXT, v TEXT)", [], function () {})
                    })
                })
            }
        },
        e = {
            setStorage: function () {},
            getStorage: function () {},
            removeStorage: function () {},
            clearStorage: function () {}
        };
    BrowserStore = new Class({
        initialize: function () {
            this.storage =
            d.init() || c.init() || a.init() || b.init() || e;
            return this
        },
        set: function (a, b) {
            b && "string" === typeOf(b) && this.storage.setStorage(a, b);
            return this
        },
        get: function (a, b) {
            this.storage.getStorage(a, b)
        },
        remove: function (a) {
            if (!a || !this.storage) return !1;
            a && this.storage.removeStorage(a);
            return this
        },
        clear: function () {
            if (!this.storage) return !1;
            this.storage.clearStorage();
            return this
        }
    })
})();
var Memory = (new Class({
    Implements: Cookie,
    options: {
        path: window.Shop ? Shop.base_url.toLowerCase() : "",
        domain: !1,
        duration: !1,
        secure: !1,
        document: document,
        encode: !0
    },
    initialize: function (a, c) {
        a = a || "";
        0 == a.indexOf("S[") && (a = a.substr(1));
        var b = a.indexOf("[");
        this.key = "S";
        this.key = -1 < b ? a.lastIndexOf("]") == a.length - 1 ? this.key + ((b ? "[" + a.substr(0, b) + "]" : "") + (b ? a.substr(b) : a)) : this.key + a : this.key + ("[" + a.replace(".", "][") + "]");
        this.key = this.key.toUpperCase();
        isNaN(c) || (c = {
            duration: c
        });
        this.setOptions(c)
    },
    write: function (a) {
        this.options.encode && (a = encodeURIComponent(a));
        this.options.domain && (a += "; domain=" + this.options.domain.toLowerCase());
        this.options.path && (a += "; path=" + this.options.path.toLowerCase());
        if (this.options.duration) {
            var c = new Date;
            c.setTime(c.getTime() + 864E5 * this.options.duration);
            a += "; expires=" + c.toGMTString()
        }
        this.options.secure && (a += "; secure");
        this.options.document.cookie = this.key + "=" + a;
        return this
    }
})).extend({
    set: function (a, c, b) {
        return (new Memory(a, b)).write(c)
    },
    get: function (a) {
        return (new Memory(a)).read()
    },
    clean: function (a, c) {
        return (new Memory(a, c)).dispose()
    }
}),
    Module = function (a, c, b) {
        this.get = function (a) {
            a = a.split(/[._]/);
            if (2 > a.length) return null;
            var b = a[0],
                a = a[1];
            if (b = this[b]) return b[a]
        };
        this.mod = function (a, b, c) {
            this.set(a, b, c);
            var f = this[a];
            Object.each(f, function (a, b) {
                f[b] = document.id(a.module)
            });
            return this
        };
        this.set = function (a, b, c) {
            function f(a, b) {
                a[b] = a[b] || {};
                return a[b]
            }
            var h = f(this, a);
            "object" == typeOf(b) ? Object.each(b, function (a, b) {
                f(h, b).module = a
            }) : "array" == typeOf(b) ? b.each(function (b) {
                "object" == typeOf(b) ? Object.each(b, function (a, b) {
                    f(h, b).module = a
                }) : "string" == typeOf(b) && (c = a + "_" + b, f(h, b).module = c)
            }) : "string" == typeOf(b) && (c = c || a + "_" + b, f(h, b).module = c);
            return this
        };
        this.dom = function (a, b, c) {
            var f = b + ">" + c;
            if (this[f]) return this[f];
            this[f] = this.get(b)[a](c);
            return this[f]
        };
        this.element = function (a, b) {
            return this.dom("getElement", a, b)
        };
        this.elements = function (a, b) {
            return this.dom("getElements", a, b)
        };
        if (a) return this.mod(a, c, b)
    };

function setGridSize(a, c, b) {
    var b = b || 0,
        d = 0,
        e = a.length;
    if (0 != e) {
        for (; d < e; d++) {
            var g = a[d],
                f = g.getPosition().y;
            if (0 < d) {
                var h = a[d - 1];
                g.innerHTML.trim() || g.setStyle("height", h.getStyle("height"));
                0 == b && (g = h.getPosition().y, f > g && (b = d))
            }
        }
        0 == b && (b = e);
        d = a[0].getParent();
        d = d.getSize().x - d.getPatch().x;
        d = parseInt(d / b);
        a.setStyle("width", d - a[0].getPatch().x);
        d = 0;
        for (e = a.length / b; d < e; d++) {
            var k = a.slice(d * b, b * (d + 1));
            k.length && c.each(function (a) {
                setEqualHeight(k.invoke("getElement", a))
            })
        }
    }
}

function getRowsHeight(a) {
    var c = 0;
    a.each(function (a) {
        a && (a = a.getStyle("height").toInt(), a > c && (c = a))
    });
    return c
}
function setEqualHeight(a, c) {
    c || (c = getRowsHeight(a));
    a.each(function (a) {
        a && a.getStyle("height").toInt() < c && a.setStyle("height", c)
    })
}
var fixImageSize = function (a, c) {
    (a || a.length) && Array.from(a).each(function (a) {
        "IMG" !== a.tagName && (a = a.getElement("img"));
        a.src && new Asset.image(a.src, {
            onload: function () {
                var d = a.getParent(c);
                if (!this || !this.get("width")) return d.adopt(a);
                "auto" == d.getComputedStyle("width") && (d = d.getParent());
                var e = parseInt(a.getStyle("max-width")) || d.getSize().x - d.getPatch("border", "padding").x,
                    d = parseInt(a.getStyle("max-height")) || d.getSize().y - d.getPatch("border", "padding").y;
                0 >= e || 0 >= d || a.zoomImg(e, d)
            }
        })
    })
};
window.addEvent("domready", function () {
    fixImageSize($$("img[data-img-zoom]"))
});

function updateCartInfo() {
    var a = Memory.get("cart_number"),
        c = Memory.get("cart_count"),
        b = Memory.get("cart_total_price");
    try {
        (a || 0 === a) && $$(".op-cart-number").set("text", a), (c || 0 === c) && $$(".op-cart-count").set("text", c), (b || 0 === b) && $$(".op-cart-total").set("text", b)
    } catch (d) {}
}(function () {
    browserStore = null;
    withBrowserStore = function (a) {
        if (browserStore) return a(browserStore);
        window.addEvent("domready", function () {
            (browserStore = new BrowserStore) ? a(browserStore) : window.addEvent("load", function () {
                a(browserStore = new BrowserStore)
            })
        })
    }
})();
var priceControl = {
    spec: {
        decimals: 2,
        dec_point: ".",
        thousands_sep: "",
        fonttend_decimal_type: 0,
        fonttend_decimal_remain: 2,
        sign: "\uffe5"
    },
    format: function (a, c) {
        var b, d = this.spec.sign || "";
        if (!(a || 0 === a) || isNaN(+a)) return a;
        a = parseFloat(a);
        this.spec.cur_rate && (a *= this.spec.cur_rate);
        var a = a.round(this.spec.decimals) + "",
            e = a.indexOf(".");
        0 > e ? (e = a.length, b = "") : b = a.substr(e + 1);
        for (; b.length < this.spec.decimals;) b += "0";
        for (var g = []; 0 < e;) if (2 < e) e -= 3, g.unshift(a.substr(e, 3));
        else {
            g.unshift(a.substr(0, e));
            break
        }
        b || (this.spec.dec_point = "");
        c && (d = '<span class="price-currency">' + d + "</span>");
        return d + g.join(this.spec.thousands_sep) + this.spec.dec_point + b
    },
    number: function (a) {
        if (!a) return null;
        isNaN(+a) && ("element" === typeOf(a) && (a = a.get("INPUT" === a.tagName ? "value" : "text")), 0 == a.indexOf(this.spec.sign) && (a = a.split(this.spec.sign)[1]));
        return +a
    },
    calc: function (a, c, b, d) {
        if (!(c || 0 === c)) return null;
        if (b) {
            var a = !a || "add" == a ? 1 : -1,
                e = 1,
                g = 1;
            "array" === typeOf(c) && (e = c[1], c = c[0]);
            "array" === typeOf(b) && (g = b[1], b = b[0]);
            var f = Math.pow(10, this.spec.decimals * this.spec.decimals),
                c = Math.abs(e * f * this.number(c) + a * g * f * this.number(b)) / f
        } else c = this.number(c);
        d || (c = this.format(c));
        return c
    },
    add: function (a, c, b) {
        return this.calc("add", a, c, b)
    },
    diff: function (a, c, b) {
        return this.calc("diff", a, c, b)
    }
};

function bindDatepicker(a) {
    a || (a = "input.calendar");
    var a = $$(a),
        c = window.Shop ? Shop.url.datepicker : "";
    if (a.length) try {
        $LAB.script(c + "/datepicker.js?"+version).wait(function () {
            a.each(function (a) {
                var b;
                try {
                    b = JSON.decode(a.get("data-calendar-options"))
                } catch (c) {}
                new DatePickers(a, b)
            })
        })
    } catch (b) {}
}
function bindDatepicker_limit(a) {
    a || (a = "input.calendar");
    var a = $$(a),
        c = window.Shop ? Shop.url.datepicker : "";
    if (a.length) try {
        $LAB.script(c + "/datepicker_limit.js?"+version).wait(function () {
            a.each(function (a) {
                var b;
                try {
                    b = JSON.decode(a.get("data-calendar-options"))
                } catch (c) {}
                new DatePickers(a, b)
            })
        })
    } catch (b) {}
}
window.addEvent("domready", function () {
    var isLimit = $("isLimit");  //是否用限单时间控制
    if(isLimit == null ){
        bindDatepicker();
    }else{
        bindDatepicker_limit();
    }
    var a = window.Shop ? Shop.url.fav_url : "",
        c = Memory.get("member"),
        c = new Memory("gfav." + c, 365),
        b = function (b, c, d) {
            function e(a) {
                a.innerHTML = '<span class="fav-on">\u5df2\u6536\u85cf</span> <i>|</i> <a href="javascript:void(0);" class="btn-delete">\u79fb\u9664</a>'
            }
            if (c && !b.hasClass("fav-on")) {
                var j = b.getParent(".p-action");
                if (d) return e(j);
                b = b.get("_type") ? b.get("_type") : "goods";
                (new Request({
                    url: a,
                    onRequest: function () {
                        this.FAVHTML = j.innerHTML;
                        j.innerHTML = '<span class="fav-loading">\u6536\u85cf\u4e2d...</span>'
                    },
                    onSuccess: function (a) {
                        (a = JSON.decode(a)) && a.success ? (j.innerHTML = '<span class="fav-success"><q class="icon">&#x25;</q> \u6536\u85cf\u6210\u529f</span>', e.delay(2E3, this, j)) : j.innerHTML = this.FAVHTML
                    }
                })).post({
                    type: b,
                    gid: c
                })
            }
        },
        d = function (b, c, d) {
            function e() {
                b.getParent().getElement("[rev=" + b.get("rel") + "]").setStyle("display", "").replaces(b)
            }
            if (c) {
                if (d) return e();
                d = b.get("data-type") ? b.get("data-type") : "goods";
                (new Request({
                    url: a,
                    onRequest: function () {
                        this.FAVHTML =
                        b.innerHTML;
                        b.innerHTML = '<span class="fav-loading">\u6536\u85cf\u4e2d...</span>'
                    },
                    onSuccess: function (a) {
                        a = JSON.decode(a);
                        a.success && e()
                    }
                })).post({
                    type: d,
                    gid: c
                })
            }
        },
        e = Array.from((c.read() || "").split(","));
    $$("a[rel=_addfav_]").each(function (a) {
        var c = a.get("data-gid");
        e.contains(c) && b(a, c, !0)
    });
    $$("[rel=_favbtn_]").each(function (a) {
        var b = a.get("data-gid");
        e.contains(b) && d(a, b, !0)
    });
    window.Event_Group && Object.merge(Event_Group, {
        _addfav_: {
            fn: function (a) {
                a = $(a.target) || $(a);
                b(a, a.get("data-gid"));
                return !1
            }
        },
        _favbtn_: {
            fn: function (a) {
                a = $(a.target) || $(a);
                d(a, a.get("data-gid"));
                return !1
            }
        }
    })
});

function starGrade(a, c, b) {
    a = $(a);
    c = parseInt(c);
    a && a.getElements(b || ".scores-item").each(function (a) {
        var b = a.getElement(".stars"),
            g = a.getElements("[class*=star-]"),
            f = a.getElement("input[type=hidden]"),
            h = a.getElement(".score");
        c || 0 === c ? (b.className = "stars stars-" + c, h.set("text", c), f.value = c) : (b.addEvent("mouseleave", function () {
            var a = f.value;
            this.className = "stars stars-" + a;
            h.set("text", a)
        }), g.each(function (a, b) {
            a.addEvents({
                mouseenter: function () {
                    this.getParent(".stars").className = "stars stars-" + (b + 1);
                    h.set("text", b + 1)
                },
                click: function () {
                    f.value = b + 1
                }
            })
        }))
    })
};
function JsonToStr(o) {
    var arr = [];
    var fmt = function(s) {
        if (typeof s == 'object' && s != null) return JsonToStr(s);
        return /^(string|number)$/.test(typeof s) ? '"' + s + '"' : s;
    }
        for (var i in o){
             if(o[i] === undefined){
                 continue;
             }
             arr.push('"' + i + '":' + fmt(o[i]) );
        }
        return '{' + arr.join(',') + '}';
};
function strToJson(str){  
    var json = (new Function("return " + str))();  
    return json;  
} 
//判断浏览器是否支持placeholder属性
function check_placeholder(input) {
    //当浏览器不支持placeholder属性时，调用placeholder函数
        var text = input.attr('placeholder');
        if (input.val() == "" ||input.val() =="null") {
            input.val(text).addClass("phcolor");
        }
        input.focus(function(){
            if (input.val() == text) {
                input.val("");
            }
        });
        input.blur(function() {
            if (input.val() == "") {
                input.val(text).addClass("phcolor");
            }
        });
        //输入的字符不为灰色
        input.keydown(function() {
            $(this).removeClass("phcolor");
        });
};
var valentine= {
        dialog:null,
        setcustomtxt:function(){
        $j('.valen_button .edit').on("click",function(){
            var temptxt = $j(this).closest('.is_custom').find(".J_custom_input").val();
            var productid = $j(this).closest('.is_custom').attr("productid");
            var custom = strToJson(decodeURIComponent(Cookie.read('custom')))?strToJson(decodeURIComponent(Cookie.read('custom'))):{};
            // custom = $j.parseJSON(custom);
            var temp = temptxt?temptxt:"";
            var tpl = '<div class="leave-mes-dia">\
                  <h4>活动定制语</h4>\
                  <textarea id="valen_content_popup" placeholder="请您输入活动定制语">'+temp+'</textarea>\
                  <div id="valen_tips" style="font-size:12px;color:red;text-align:left;margin-top: 8px"></div>\
                  </div>';
            Dialog.confirm_valen(tpl,function(e){
              if(e){
                if(valentine.check_en_ch($j("#valen_content_popup").val(),productid)){
                    var customtxt1 =  strToJson(decodeURIComponent(Cookie.read('custom')));
                    var customtxt = decodeURIComponent(customtxt1[productid]);
                  $j("tr[productid="+productid+"]").find(".J_custom_input").val(customtxt);
                  $j("tr[productid="+productid+"] .J_modify_txt").each(function() {
                      if($j(this).text() == customtxt){
                        $j(this).addClass('active');
                      }else{
                        $j(this).removeClass('active');
                      }
                  });
                  return true;
                }
              }
            });
            $j(".pop-attention-main .btn-simple.action-clear").on("click",function(){
                  $j("tr[productid="+productid+"]").find(".J_custom_input").val("");
                  custom[productid] = "";
                  Cookie.write('custom',encodeURIComponent(JsonToStr(custom)), {domain: '21cake.com','path':'/','duration':1});
                  var li_active = $j("tr[productid="+productid+"]").find(".J_modify_txt ");
                  if(li_active.hasClass('active')){
                    li_active.removeClass('active');
                  }
              })
            return;
          });
    },
    setmodifycustom:function(){
        $j(".J_modify_txt").on("click",function(){
          var productid = $j(this).closest('.is_custom').attr("productid");
          var modifytxt = $j(this).text();
          var custom_cookie_temp = Cookie.read('custom');
          if(custom_cookie_temp){
            var custom = strToJson(decodeURIComponent(custom_cookie_temp));
          }else{
            var custom = {};
          }
          var modify_value = encodeURIComponent(modifytxt);
          custom[productid]=modify_value;
          Cookie.write('custom',encodeURIComponent(JsonToStr(custom)), {domain: '21cake.com','path':'/','duration':1});
          $j(this).closest('.is_custom').find(".J_custom_input").val(modifytxt);
          $j(this).addClass('active').siblings('li').removeClass('active');
        })
    },
        check_en_ch:function(_value,productid){ //中文不能有数字，英文可以有数字
        var reg_en_num = /^[0-9A-Za-z\'\"\,\.\!\?\:\s|“|”|‘|’|！|？|：|。|，]+/;
        var reg_en_num_nonull = /[0-9A-Za-z\"\,\.\!\?\:|“|”|‘|’|！|？|：|。|，]/;
        var reg_container_en = /[A-Za-z]/;
        var reg_chinese = /^[0-9\u4E00-\u9FA5\"\,\.\!\?\:\s|“|”|‘|’|！|？|：|。|，]+/;
        var chinese_arr = [];
        var english_arr = [];
        var cn_limit_num = 11, cn_total_num = 33, en_limit_num = 14, en_total_num = 60;
        var custom = strToJson(decodeURIComponent(Cookie.read('custom')))?strToJson(decodeURIComponent(Cookie.read('custom'))):{};
        if(_value.length == 0){
            $j("tr[productid="+productid+"]").find(".J_custom_input").val("");
            custom[productid] = "";
            Cookie.write('custom',encodeURIComponent(JsonToStr(custom)), {domain: '21cake.com','path':'/','duration':1});
            return true;
        }
        if(reg_container_en.test(_value)){ //如果包括英文
            if(reg_en_num.test(_value)){ //如果是以英文或数字开头
                if(_value == _value.match(reg_en_num)[0]){ //通过全英文数字
                    if(_value.indexOf("\n") >= 0){ //有换行
                        english_arr = _value.split("\n")
                        if(english_arr.length > 5){ //超过五行
                            // Dialog.alert('英文不能超过五行，每行不能超过16个字符。');
                            $j("#valen_tips").html("");
                            $j("#valen_tips").html("英文不能超过五行，每行不能超过16个字符。");
                            return false;
                        }else{
                            for(i in english_arr){
                                if(english_arr[i].length > en_limit_num){
                                    // var _html="<div class='dialog-text'>"+"第"+(parseInt(i)+1)+"行字数不能超过"+en_limit_num+"个。"+"</div>";
                                    // $j(".leave-mes-dia").append(_html);
                                    // Dialog.alert(_html);
                                    $j("#valen_tips").html("");
                                    $j("#valen_tips").html("第"+(parseInt(i)+1)+"行字数不能超过"+en_limit_num+"个。"); 
                                    return false;
                                }
                            }
                        }
                    }else{ //没有换行
                        if(_value.length > en_total_num){
                            // var _html="<div class='dialog-text'>"+"数字长度不能超过"+en_total_num+"个。"+"</div>";
                            // $j(".leave-mes-dia").append(_html)
                            // Dialog.alert(_html);
                            $j("#valen_tips").html("");
                            $j("#valen_tips").html("数字长度不能超过"+en_total_num+"个。");
                            return false;
                        };
                        var split_num = Math.ceil(_value.length/en_limit_num);
                        var j = 0;
                        var arr_j = 0;
                        while(j < _value.length){
                            if(arr_j >= 5){
                                break;
                            }
                            if((j+en_limit_num-1) >= _value.length){
                                english_arr[arr_j] = _value.substring(j,_value.length);
                                break;
                            }else if(/\s/.test(_value[j+en_limit_num-1])){ //如果自己是空格加\n
                                english_arr[arr_j] = _value.substring(j,j+en_limit_num-1);
                                j = j+en_limit_num-1;
                            }else if(/\s/.test(_value[j+en_limit_num-1-1])){ //如果前面是空格加\n
                                english_arr[arr_j] = _value.substring(j,j+en_limit_num-1-1);
                                j = j+en_limit_num-1-1;
                            }else{
                                for(var m = j+en_limit_num-1; j < m ; m--){
                                    if(/\s/.test(_value.charAt(m))){
                                        english_arr[arr_j] = _value.substring(j,m+1);
                                        j = m+1;
                                        break;
                                    }
                                }
                            } 
                            arr_j++;
                        }
                        _value = english_arr.join("\n");
                    }
                    //存储成功
                    var en_value = encodeURIComponent(_value);
                    custom[productid]=en_value;
                    Cookie.write('custom',encodeURIComponent(JsonToStr(custom)), {domain: '21cake.com','path':'/','duration':1});
                }else{ //英文前中文后
                    // Dialog.alert("为了保证最佳效果<br/>请输入纯中文或纯英文的定制语");
                    $j("#valen_tips").html("");
                    $j("#valen_tips").html("为了保证最佳效果请输入纯中文或纯英文的定制语");
                    return false;
                }                         
            }else{ //包括英文中文数字 ，中文在前
                // Dialog.alert("为了保证最佳效果<br/>请输入纯中文或纯英文的定制语");
                 $j("#valen_tips").html("");
                $j("#valen_tips").html("为了保证最佳效果请输入纯中文或纯英文的定制语");
                return false;
            }
        }else{ //包括中文数字
            if(_value.match(reg_chinese) == _value){ //全汉字数字通过
                if(_value.indexOf("\n") >= 0){ //有换行
                    chinese_arr = _value.split("\n")
                    if(chinese_arr.length > 3){ //超过三行
                        // Dialog.alert("汉字不能超过三行，每行不能超过11个字");
                         $j("#valen_tips").html("");
                        $j("#valen_tips").html("汉字不能超过三行，每行不能超过11个字");
                        return false;
                    }else{
                        for(i in chinese_arr){
                            if(chinese_arr[i].length > cn_limit_num){
                                // var _html="<div class='dialog-text'>"+"第"+(parseInt(i)+1)+"行字数不能超过"+cn_limit_num+"个。"+"</div>";
                                // $j(".leave-mes-dia").append(_html)
                                // Dialog.alert(_html);
                                $j("#valen_tips").html("");
                                $j("#valen_tips").html("第"+(parseInt(i)+1)+"行字数不能超过"+cn_limit_num+"个。");
                                return false;
                            }
                        }
                    }
                }else{ //没有换行
                    if(_value.length > cn_total_num){
                        // var _html="<div class='dialog-text'>"+"数字长度不能超过"+cn_total_num+"个。"+"</div>";
                        // $j(".leave-mes-dia").append(_html)
                        // Dialog.alert(_html);
                        $j("#valen_tips").html("");
                        $j("#valen_tips").html("数字长度不能超过"+cn_total_num+"个。");
                        return false;
                    }
                    var split_num = Math.ceil(_value.length/cn_limit_num);
                    for(var j=0; j<split_num; j++){
                        chinese_arr[j] = _value.substring(j*cn_limit_num,(j+1)*cn_limit_num);
                    }
                    _value = chinese_arr.join("\n");

                }
                //存储成功
                 var zh_value = encodeURIComponent(_value);
                custom[productid]=zh_value;
                Cookie.write('custom',encodeURIComponent(JsonToStr(custom)), {domain: '21cake.com','path':'/','duration':1});
            }else{ //失败3 中文加特殊符号
                // var _html="您输入的定制语中含有不支持的特殊字符，请重新输入。";
                // $j(".leave-mes-dia").append(_html)
                // Dialog.alert(_html);
                $j("#valen_tips").html("");
                $j("#valen_tips").html("您输入的定制语中含有不支持的特殊字符，请重新输入。");
                return false;
            }
        }
        return true;
    }
    // ding_zhi_preview:function(_value){
    //     var custom_word = _value;
    //     var custom_word_arr = custom_word.split("\n");
    //          custom_word = "";
    //          for(var i=0; i<custom_word_arr.length; i++){
    //             custom_word +=custom_word_arr[i]+"<br/>";
    //          }
    //     var _html='<div style="padding:5px;position:relative"><img src="http://devec.21cake.com/public/images/f8/38/f9/80fa62eea7ce1cedc602492e46022805.jpg?1421666186#h"><span style="font-family: segoesc; font-size: 10px; position: absolute; width: 16px; line-height: 13px; bottom: 167px; right: 72px;">'+custom_word+'</span></div>';
    //     var image=Dialog.alert_valen(_html);
    //     return true;
    // }
};


var valentine1 = {
    dialog:null,
    _value:null,
     check_city:function(){
        var city = $j.parseJSON(decodeURIComponent(decodeURIComponent(Cookie.read("sale_city"))));
        var limit_citys = ["广州","深圳"];
        if(limit_citys.indexOf(city.name) >= 0){
            Dialog.alert("广州,深圳两地暂不配送<br/>新馬斯卡彭-咖啡軟芝士蛋糕。");
            return false;
        }
        return true;
    },
          check_en_ch:function(_value){ //中文不能有数字，英文可以有数字
        var reg_en_num = /^[0-9A-Za-z\'\"\,\.\!\?\:\s|“|”|‘|’|！|？|：|。|，]+/;
        var reg_en_num_nonull = /[0-9A-Za-z\"\,\.\!\?\:|“|”|‘|’|！|？|：|。|，]/;
        var reg_container_en = /[A-Za-z]/;
        var reg_chinese = /^[0-9\u4E00-\u9FA5\"\,\.\!\?\:\s|“|”|‘|’|！|？|：|。|，]+/;
        var chinese_arr = [];
        var english_arr = [];
        _value=_value;
        var cn_limit_num = 11, cn_total_num = 33, en_limit_num = 14, en_total_num = 60;
        if(_value.length == 0){
            Dialog.alert("请输入您的定制语");
            return false;
        }
        if(reg_container_en.test(_value)){ //如果包括英文
            if(reg_en_num.test(_value)){ //如果是以英文或数字开头
                if(_value == _value.match(reg_en_num)[0]){ //通过全英文数字
                    if(_value.indexOf("\n") >= 0){ //有换行
                        english_arr = _value.split("\n")
                        if(english_arr.length > 5){ //超过五行
                            Dialog.alert('英文不能超过五行，每行不能超过16个字符。');
                            return false;
                        }else{
                            for(i in english_arr){
                                if(english_arr[i].length > en_limit_num){
                                    var _html="<div class='dialog-text'>"+"第"+(parseInt(i)+1)+"行字数不能超过"+en_limit_num+"个。"+"</div>";
                                    Dialog.alert(_html);
                                    return false;
                                }
                            }
                        }
                    }else{ //没有换行
                        if(_value.length > en_total_num){
                            var _html="<div class='dialog-text'>"+"数字长度不能超过"+en_total_num+"个。"+"</div>";
                            Dialog.alert(_html);
                            return false;
                        }
                        var split_num = Math.ceil(_value.length/en_limit_num);
                        var j = 0;
                        var arr_j = 0;
                        while(j < _value.length){
                            if(arr_j >= 5){
                                break;
                            }
                            if((j+en_limit_num-1) >= _value.length){
                                english_arr[arr_j] = _value.substring(j,_value.length);
                                break;
                            }else if(/\s/.test(_value[j+en_limit_num-1])){ //如果自己是空格加\n
                                english_arr[arr_j] = _value.substring(j,j+en_limit_num-1);
                                j = j+en_limit_num-1;
                            }else if(/\s/.test(_value[j+en_limit_num-1-1])){ //如果前面是空格加\n
                                english_arr[arr_j] = _value.substring(j,j+en_limit_num-1-1);
                                j = j+en_limit_num-1-1;
                            }else{
                                for(var m = j+en_limit_num-1; j < m ; m--){
                                    if(/\s/.test(_value.charAt(m))){
                                        english_arr[arr_j] = _value.substring(j,m+1);
                                        j = m+1;
                                        break;
                                    }
                                }
                            } 
                            arr_j++;
                        }
                        _value = english_arr.join("\n");
                    }
                    //存储成功
                    var myCookie = Cookie.write('valentines', _value, {domain: '21cake.com','path':'/','duration':1});
                }else{ //英文前中文后
                    Dialog.alert("为了保证最佳效果<br/>请输入纯中文或纯英文的定制语")
                    return false;
                }                         
            }else{ //包括英文中文数字 ，中文在前
                Dialog.alert("为了保证最佳效果<br/>请输入纯中文或纯英文的定制语");
                return false;
            }
        }else{ //包括中文数字
            if(_value.match(reg_chinese) == _value){ //全汉字数字通过
                if(_value.indexOf("\n") >= 0){ //有换行
                    chinese_arr = _value.split("\n")
                    if(chinese_arr.length > 3){ //超过三行
                        Dialog.alert("汉字不能超过三行，每行不能超过11个字");
                        return false;
                    }else{
                        for(i in chinese_arr){
                            if(chinese_arr[i].length > cn_limit_num){
                                var _html="<div class='dialog-text'>"+"第"+(parseInt(i)+1)+"行字数不能超过"+cn_limit_num+"个。"+"</div>";
                                Dialog.alert(_html);
                                return false;
                            }
                        }
                    }
                }else{ //没有换行
                    if(_value.length > cn_total_num){
                        var _html="<div class='dialog-text'>"+"数字长度不能超过"+cn_total_num+"个。"+"</div>";
                        Dialog.alert(_html);
                        return false;
                    }
                    var split_num = Math.ceil(_value.length/cn_limit_num);
                    for(var j=0; j<split_num; j++){
                        chinese_arr[j] = _value.substring(j*cn_limit_num,(j+1)*cn_limit_num);
                    }
                    _value = chinese_arr.join("\n");
                }
                //存储成功
                var myCookie = Cookie.write('valentines', _value, {domain: '21cake.com','path':'/','duration':1});
            }else{ //失败3 中文加特殊符号
                var _html="您输入的定制语中含有不支持的特殊字符，请重新输入。";
                Dialog.alert(_html);
                return false;
            }
        }
        return true;
    },
    ding_zhi_preview:function(){
        var custom_word = Cookie.read("valentines"); 
        var custom_word_arr = custom_word.split("\n");
             custom_word = "";
             if(/[A-Za-z]/.test(Cookie.read("valentines"))){ //英文
                for(var i=0; i<custom_word_arr.length; i++){
                    custom_word +=custom_word_arr[i]+"<br/>";
                 }
                 var _html='<div style="padding:5px;position:relative"><img src="http://www.21cake.com/public/images/a1/ac/35/3bd29fc32b43eee694994a47813e0fb2.jpg?1421746716#h"><span style=" position: absolute; line-height: 13px; top: 286px; right: 60px;"><p style="font-family: segoesc; font-size: 12px;text-shadow:0px 1px 1px #ccc, -1px -1px 1px #fff;text-align:left;word-wrap: break-word;width:110px">'+custom_word+'</p></span></div>';
             }else{
                for(var j=0; j<custom_word_arr.length; j++){
                    custom_word_arr[j] = custom_word_arr[j].replace(/\s/g,'　');
                    custom_word_arr[j] = custom_word_arr[j].replace(/([0-9])/g,'<em style="display:block">$1</em>');
                    custom_word += "<p style='width:16px; float:right;word-wrap: break-word;'>"+custom_word_arr[j]+"</p>"; 
                    var _html='<div style="padding:5px;position:relative"><img src="http://www.21cake.com/public/images/12/84/8c/83d57b72a9d565b4a427b1cffb15247d.jpg?1421746726#h"><span style="font-family: cn_segoesc; font-size: 10px; position: absolute; line-height: 13px; top: 216px; right: 72px;text-shadow:0px 1px 1px #ccc, -1px -1px 1px #fff;">'+custom_word+'</span></div>';
                }        
             }
        var image=Dialog.alert_valen(_html);
        $j(".alert-container").css("top","20px");
        $j(".pop-attention-main .bottom").css({"margin":"-8px 0 10px"});
        $j(".pop-attention-main").css({"padding":0});
        $j(".alert-content").css({"height":"547px"}) ; 
        return true;
    }
};


